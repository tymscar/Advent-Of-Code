// Inspired by https://github.com/mstksg/advent-of-code-ocr/blob/main/src/Advent/OCR/LetterMap.hs

const letters: {[key: string]: string[]} = {
	a: [
		'.##..',
		'#..#.',
		'#..#.',
		'####.',
		'#..#.',
		'#..#.'
	],
	b: [
		'###..',
		'#..#.',
		'###..',
		'#..#.',
		'#..#.',
		'###..'
	],
	c: [
		'.##..',
		'#..#.',
		'#....',
		'#....',
		'#..#.',
		'.##..'
	],
	d: [
		'###..',
		'#..#.',
		'#..#.',
		'#..#.',
		'#..#.',
		'###..'
	],
	e: [
		'####.',
		'#....',
		'###..',
		'#....',
		'#....',
		'####.'
	],
	f: [
		'####.',
		'#....',
		'###..',
		'#....',
		'#....',
		'#....'
	],
	g: [
		'.##..',
		'#..#.',
		'#....',
		'#.##.',
		'#..#.',
		'.###.'
	],
	h: [
		'#..#.',
		'#..#.',
		'####.',
		'#..#.',
		'#..#.',
		'#..#.'
	],
	i: [
		'.###.',
		'..#..',
		'..#..',
		'..#..',
		'..#..',
		'.###.'
	],
	j: [
		'..##.',
		'...#.',
		'...#.',
		'...#.',
		'#..#.',
		'.##..'
	],
	k: [
		'#..#.',
		'#.#..',
		'##...',
		'#.#..',
		'#.#..',
		'#..#.'
	],
	l: [
		'#....',
		'#....',
		'#....',
		'#....',
		'#....',
		'####.'
	],
	o: [
		'.##..',
		'#..#.',
		'#..#.',
		'#..#.',
		'#..#.',
		'.##..'
	],
	p: [
		'###..',
		'#..#.',
		'#..#.',
		'###..',
		'#....',
		'#....'
	],
	r: [
		'###..',
		'#..#.',
		'#..#.',
		'###..',
		'#.#..',
		'#..#.'
	],
	s: [
		'.###.',
		'#....',
		'#....',
		'.##..',
		'...#.',
		'###..'
	],
	u: [
		'#..#.',
		'#..#.',
		'#..#.',
		'#..#.',
		'#..#.',
		'.##..'
	],
	y: [
		'#...#',
		'#...#',
		'.#.#.',
		'..#..',
		'..#..',
		'..#..'
	],
	z: [
		'####.',
		'...#.',
		'..#..',
		'.#...',
		'#....',
		'####.'
	]
};

const decode = (character: string[]): string => {
	const char = Object.keys(letters).find(letter => letters[letter].join('') === character.join(''));
	return char !== undefined ? char : '_';
};

export default decode;